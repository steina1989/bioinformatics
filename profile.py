#!/usr/bin/env python3
import bioutils as b


class Profile:

    base_to_index = dict(zip("ACGT", range(4)))

    def __init__(self, profile: list):
        self.profile = profile

    def probability_of_kmer(self, kmer: str):
        """ Returns the probability that a single kmer was generated by this profile. """

        odds = 1.0
        for i, base in enumerate(kmer):
            index = self.base_to_index[base]
            odds *= self.profile[index][i]
        return odds

    def most_probable_kmer_in_dna(self, dna: str, k: int):
        """ Returns that kmer in dna that has the highest chance of having been 
        generated by the profile. In case of multiple kmers having equal highest change,
        returns the one occurring first."""

        highest_odds = 0
        most_probable = ""
        for kmer in b.iter_substr(dna, k):
            odds = self.probability_of_kmer(kmer)
            if odds > highest_odds:
                highest_odds = odds
                most_probable = kmer
        return most_probable
